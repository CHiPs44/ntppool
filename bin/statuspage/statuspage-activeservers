# -*- cperl -*-
eval 'exec $CBROOT/bin/perl $0 ${1+"$@"}'
  unless $running_under_some_shell;
use strict;
use warnings;
use LWP::UserAgent;
use NP::Model;
use DateTime;
use DateTime::Format::MySQL;

my $api_base  = 'api.statuspage.io';
my $batch_size = 2000;

my $verbose = (-t STDIN or -d "/run/secrets/kubernetes.io");

my $dbh = NP::Model->dbh;

my $settings = NP::Model->system_setting->fetch(key => 'statuspage');
if (!$settings) {
    warn "no statuspage settings available\n";
    exit 2;
}
$settings = $settings->value;

my $api_key   = $settings->{api_key} or die "no statuspage api_key";
my $page_id   = $settings->{page_id} or die "no statuspage page_id";

my $ua = LWP::UserAgent->new();
$ua->default_header("Authorization" => "OAuth " . $api_key);

warn "Getting data\n" if $verbose;

my $total = NP::Model->zone->fetch(name => '.');

my @batch;

for my $v (qw(v4 v6)) {
    my $metric_id = $settings->{metrics}->{$v} or next;
    my $count = $total->server_count($v);
    print "$v: $count\n" if $verbose;
    push @batch, [$metric_id, $count];
}

my @form = map {
    my @d = @$_;
    ("data[$d[0]][][timestamp]", time, "data[$d[0]][][value]", $d[1])
} @batch;

post(\@form);

sub post {
    my $form = shift;
    my $resp = $ua->post("https://api.statuspage.io/v1/pages/${page_id}/metrics/data.json", $form);
    if ($resp->is_success) {
        print "ok!\n" if $verbose;
    }
    else {
        print STDERR $resp->status_line, "\n";
        print $resp->decoded_content, "\n";
        exit 2;
    }
}
